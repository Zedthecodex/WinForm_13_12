<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>